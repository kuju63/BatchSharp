name: Package release

on:
  workflow_dispatch: 
    inputs: 
      release_version: 
        description: 'Release version without "v".'
        required: true
        type: string
      create_release:
        description: "Need create GitHub Release"
        required: false
        type: boolean
        default: false
      draft_release:
        description: "Create GitHub Release as draft"
        required: false
        type: boolean
        default: false
      pre_release:
        description: "Create GitHub Release as pre-release"
        required: false
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release
      - name: Packaging
        run: dotnet pack --no-restore --no-build --output nupkgs -c Release -p:PackageVersion=${{ inputs.release_version }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: BatchSharp
          path: nupkgs/*.nupkg
          if-no-files-found: error

  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install docfx
        run: dotnet tool install -g docfx
      - name: Generate metadata
        run: docfx metadata docs/docfx.json
      - name: Create api docs
        run: docfx build docs/docfx.json
      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: BatchSharp-docs
          path: docs/_site
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions: 
      packages: write
    steps:
      - name: download artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: BatchSharp
      - name: Publish NuGet IT
        if: ${{ !inputs.create_release }}
        run: dotnet nuget push *.nupkg --source ${{ vars.NUGET_IT_SERVER }} --api-key ${{ secrets.GITHUB_TOKEN }}
      - name: Publish NuGet
        if: inputs.create_release
        run: dotnet nuget push *.nupkg --source ${{ vars.NUGET_SERVER }} --api-key ${{ secrets.NUGET_API_KEY }}
  release:
    runs-on: ubuntu-latest
    if: inputs.create_release
    needs: build
    permissions: 
      contents: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: BatchSharp
      - name: Create Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          name: v${{ inputs.release_version }}
          commit: ${{ github.sha }}
          tag: v${{ inputs.release_version }}
          generateReleaseNotes: true
          artifacts: "*.nupkg"
          draft: ${{ inputs.draft_release }}
          prerelease: ${{ inputs.pre_release }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - build
      - build-app
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: BatchSharp-docs
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
